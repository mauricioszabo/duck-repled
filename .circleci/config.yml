version: 2.1
defaults: &defaults
  machine:
    image: ubuntu-2004:202104-01

jobs:
  deps:
    <<: *defaults
    steps:
      - checkout
      - run:
          command: docker build . -t tests
      - run:
          command: docker save -o docker-image.img tests
      - persist_to_workspace:
          root: '.'
          paths:
            - ./docker-image.img

  test-cljs:
    <<: *defaults
    steps:
      - attach_workspace:
          at: '.'
      - run:
          command: docker load -i docker-image.img
      - run:
          command: wget https://github.com/babashka/babashka/releases/download/v0.4.3/babashka-0.4.3-linux-amd64-static.tar.gz && tar -xf babashka-0.4.3-linux-amd64-static.tar.gz
      - run:
          command: "docker run -it tests node lib/main.js --test"
      - run:
          command: "docker run -v `pwd`:/temp -it tests cp -av . /temp"
      - persist_to_workspace:
          root: '.'
          paths:
            - ./docker-image.img
            - bb
            - lib
            - test/duck_repled/tests.cljs
            - node_modules

  test-clj:
    <<: *defaults
    steps:
      - attach_workspace:
          at: '.'
      - run:
          command: docker load -i docker-image.img
      - run:
          command: "docker run -it tests lein test"
          when: always

  babashka:
    <<: *defaults
    steps:
      - attach_workspace:
          at: '.'
      - run: sudo apt install tmux
      - run: tmux new-session -d
      - run: tmux send-keys './bb --socket-repl 4444 ' Enter
      - run: sleep 20; node lib/main.js --test 4444

  # joker:
  #   <<: *defaults
  #   steps:
  #     - attach_workspace:
  #         at: '.'
  #     - run: wget https://github.com/candid82/joker/releases/download/v0.15.6/joker-0.15.6-linux-amd64.zip
  #     - run: unzip joker*.zip
  #     - run: ./joker --exit-to-repl localhost:4444 & sleep 2; node lib/main.js --test 4444 joker

  lumo:
    <<: *defaults
    steps:
      - attach_workspace:
          at: '.'
      - run: sudo apt update
      - run: sudo apt install tmux npm rlwrap
      - run: sudo npm install -g lumo-cljs --unsafe-perm
      - run: tmux new-session -d
      - run: tmux send-keys 'lumo -n 4444 ' Enter
      - run: sleep 5; node lib/main.js --test 4444

  clojerl:
    docker:
      - image: erlang
    steps:
      - attach_workspace:
          at: '.'
      - run: apt-get update
      - run: apt-get install -y git npm nodejs rlwrap tmux
      - run: echo '{erl_opts, [debug_info]}. {deps, [{clojerl, {git, "https://github.com/clojerl/clojerl", {branch, "master"}}}]}. {plugins, [{rebar3_clojerl, "0.8.4"}]}.' > rebar.config
      - run: echo ":foo" | rebar3 clojerl repl
      - run: tmux new-session -d
      - run: tmux send-keys 'rebar3 clojerl repl' Enter
      - run: tmux send-keys "(do (require 'clojure.core.server) (clojure.core.server/start-server {:name \"socket-repl\" :port 4444 :accept 'clojure.main/repl :address \"localhost\"}))" Enter
      - run: sleep 20; node lib/main.js --test 4444 clojerl

  clojureclr:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:5.0
    steps:
      - attach_workspace:
          at: '.'
      - run: apt-get update
      - run: apt-get install -y tmux nodejs
      - run: dotnet tool install --global --version 1.10.0-alpha1 Clojure.Main
      - run: tmux new-session -d
      - run: tmux send-keys "/root/.dotnet/tools/Clojure.Main -e \"(clojure.core.server/start-server {:name \\\"test\\\" :port 4444 :accept 'clojure.core.server/repl})(read)\"" Enter
      - run: sleep 20; node lib/main.js --test 4444 cljr

  shadow-cljs:
    <<: *defaults
    steps:
      - attach_workspace:
          at: '.'
      - run: sudo apt update
      - run: sudo apt install tmux npm
      - run: echo '{}' > shadow-cljs.edn
      - run: tmux new-session -d
      - run: tmux send-keys 'npx shadow-cljs node-repl ' Enter
      - run: ./bb -e '(when-not (babashka.wait/wait-for-path ".shadow-cljs/socket-repl.port" {:timeout 60000}) (System/exit 1))'
      - run: node lib/main.js --test `cat .shadow-cljs/socket-repl.port` shadow

workflows:
  version: 2
  default-workflow:
    jobs:
      - deps:
          filters:
            tags:
              only:
                - /^v.+/

      - test-cljs:
          requires:
            - deps
          filters:
            tags:
              only:
                - /^v.+/

      - test-clj:
          requires:
            - deps
          filters:
            tags:
              only:
                - /^v.+/

      - babashka:
          requires:
            - test-cljs
          filters:
            tags:
              only:
                - /^v.+/
      # - joker:
      #     requires:
      #       - test-cljs
      #     filters:
      #       tags:
      #         only:
      #           - /^v.+/
      - lumo:
          requires:
            - test-cljs
          filters:
            tags:
              only:
                - /^v.+/
      - clojerl:
          requires:
            - test-cljs
          filters:
            tags:
              only:
                - /^v.+/
      - clojureclr:
          requires:
            - test-cljs
          filters:
            tags:
              only:
                - /^v.+/
      - shadow-cljs:
          requires:
            - test-cljs
          filters:
            tags:
              only:
                - /^v.+/
